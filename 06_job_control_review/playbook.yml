---
- name:
  hosts: webservers
  gather_facts: true
  become: true
  vars_files:
    - vars/vars.yml
  tasks:
    ##############################################
    # 0) 점검 - MEM > 256, 배포판: CentOS
    # 1) 패키지 설치 - httpd, mod_ssl, firewalld
    # 2) 서비스 기동 - httpd, firewalld
    # 3) 웹 서버 설정(notify)
    #   * /etc/pki/tls/certs/localhost.crt
    #   * /etc/pki/tls/private/localhost.key
    #   * /var/www/html/index.html
    # 4) 방화벽 포트 등록 - http, https
    # 5) handlers 정의
    ##############################################
      - name: 0) 점검 - MEM > 256, 배포판 CentOS
        ansible.builtin.fail:
          msg: "메모리가 256M 보다 작거나 CentOS가 아닙니다!"
        when: >
          ansible_memtotal_mb < min_ram_mb or
          ansible_distribution != "CentOS"

      - name: 0) 점검 - 배포판 버전 점검
        ansible.builtin.fail:
          msg: "CentOS Stream 9 버전에서만 동작합니다!"
        failed_when: ansible_distribution_version != "9"
        
      - name: 1) 패키지 설치 - {{ packages }}
        ansible.builtin.dnf:
          name: "{{ packages }}"
          state: present

      - name: 2) 서비스 기동 - {{ services }}
        ansible.builtin.systemd:
          service: "{{ item }}"
          state: started
          enabled: true
        loop: "{{ services }}"

      - name: Block ~ Rescue
        block:
          - name: 3) 웹 서버 설정
            ansible.builtin.copy:
              src: "{{ item.src }}"
              dest: "{{ item.dest }}"
              owner: "{{ item.owner }}"
              group: "{{ item.group }}"
              mode: "{{ item.mode }}"
            loop: "{{ web_config_files }}"
            notify: restart_web_service

        rescue:
          - name: 3) 웹 서버 설정 - 오류 메세지 출력
            ansible.builtin.debug:
              msg: "[ FAIL ] 웹 서버 설정 실패!"

      - name: 4) 방화벽 등록 - {{ firewall_rules }}
        ansible.posix.firewalld:
          service: "{{ item }}"
          permanent: true
          immediate: true
          state: enabled
        loop: "{{ firewall_rules }}"

  handlers:
    - name: restart_web_service
      ansible.builtin.systemd:
        service: "{{ web_service }}"
        state: started